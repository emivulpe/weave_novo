<?xml version="1.0" ?>
<documents>
<document name = "ClockDocument" type = "mathType" kind = "Textual" FixOrder = "true" ID = "00000000-0000-0000-0000-000000000003">
    <text type ="title" value = "Problem : Write a program to place the numbers 1 to 12 as if they were on a clock face.;" order="0" ID = "00000000-0000-0000-0000-000000000007" />
    <text type ="number" value = "-------------------------------------------------------------------------------------------------------------------------------------------;" order="1" ID = "00000000-0000-0000-0000-000000000008" />
    <text type ="number" value = ";" order="2" ID = "00000000-0000-0000-0000-000000000009" />
    <text type ="number" value = "# Write a program to place the numbers 1 to 12 as  ;" order="3" ID = "00000000-0000-0000-0000-00000000000a" />
    <text type ="text" value = "# if they were on a clock face. ;" order="4" ID = "00000000-0000-0000-0000-00000000000b" />
    <text type ="text" value = "# Quintin Cutts 8 - 11 - 2013 ;" order="5" ID = "00000000-0000-0000-0000-00000000000c" />
    <text type ="text" value = " ;" order="6" ID = "00000000-0000-0000-0000-00000000000d" />
    <text type ="symbol" value = "from Canvas import * ;" order="7" ID = "00000000-0000-0000-0000-00000000000e" />
    <text type ="text" value = " ;" order="8" ID = "00000000-0000-0000-0000-00000000000f" />
    <text type ="symbol" value = "hour = 1 ;" order="9" ID = "00000000-0000-0000-0000-000000000010" />
    <text type ="symbol" value = "angle = 150 ;" order="10" ID = "00000000-0000-0000-0000-000000000011" />
    <text type ="symbol" value = "radius = 80 ;" order="11" ID = "00000000-0000-0000-0000-000000000012" />
    <text type ="symbol" value = "x_centre = 100 ;" order="12" ID = "00000000-0000-0000-0000-000000000013" />
    <text type ="symbol" value = "y_centre = 100 ;" order="13" ID = "00000000-0000-0000-0000-000000000014" />
    <text type ="text" value = " ;" order="14" ID = "00000000-0000-0000-0000-000000000015" />
    <text type ="symbol" value = "while hour &lt;= 12: ;" order="15" ID = "00000000-0000-0000-0000-000000000016" />
    <text type ="symbol" value = "    num_x,  num_y = end_point( x_centre, y_centre, radius, angle ) ;" order="16" ID = "00000000-0000-0000-0000-000000000017" />
    <text type ="symbol" value = "    create_text( num_x, num_y, text=str( hour ) ) ;" order="17" ID = "00000000-0000-0000-0000-000000000018" />
    <text type ="symbol" value = "    angle = angle + 30 ;" order="18" ID = "00000000-0000-0000-0000-000000000019" />
    <text type ="symbol" value = "    print hour ;" order="19" ID = "00000000-0000-0000-0000-00000000001a" />
    <text type ="symbol" value = "    hour = hour + 1 ;" order="20" ID = "00000000-0000-0000-0000-00000000001b" />
    <text type ="text" value = " ;" order="21" ID = "00000000-0000-0000-0000-00000000001c" />
    <text type ="symbol" value = "create_oval( 10,10,190,190 ) ;" order="22" ID = "00000000-0000-0000-0000-00000000001e" />
    <text type ="text" value = " ;" order="23" ID = "00000000-0000-0000-0000-00000000001f" />
    <text type ="symbol" value = "complete();" order="24" ID = "00000000-0000-0000-0000-000000000020" />
</document>
<document name = "HorizontalLinesDocument" type = "mathType" kind = "Textual" FixOrder = "true" ID = "00000000-0000-0000-0000-000000000021">
    <text type ="title" value = "Problem:  Draw 10 parallel horizontal lines, each 100 long, starting at (10,10) and spaced 10 apart, going downwards.;" order="0" ID = "00000000-0000-0000-0000-000000000026" />
    <text type ="number" value = "----------------------------------;" order="1" ID = "00000000-0000-0000-0000-000000000027" />
    <text type ="number" value = ";" order="2" ID = "00000000-0000-0000-0000-000000000028" />
    <text type ="text" value = "# Write a program to draw 10 parallel horizontal lines,;" order="3" ID = "00000000-0000-0000-0000-000000000029" />
    <text type ="text" value = "# each 100 long, spaced 10 apart.  First line starts at (10,10);" order="4" ID = "00000000-0000-0000-0000-00000000002a" />
    <text type ="text" value = "# Quintin 8 - 11 - 13;" order="5" ID = "00000000-0000-0000-0000-00000000002b" />
    <text type ="number" value = ";" order="6" ID = "00000000-0000-0000-0000-00000000002c" />
    <text type ="symbol" value = "from Canvas import *;" order="7" ID = "00000000-0000-0000-0000-00000000002d" />
    <text type ="number" value = ";" order="8" ID = "00000000-0000-0000-0000-00000000002e" />
    <text type ="symbol" value = "y = ??;" order="9" ID = "00000000-0000-0000-0000-00000000002f" />
    <text type ="symbol" value = "y = 10   # This is the value changing on each loop;" order="10" ID = "00000000-0000-0000-0000-000000000030" />
    <text type ="number" value = ";" order="11" ID = "00000000-0000-0000-0000-000000000031" />
    <text type ="symbol" value = "while y &lt;= ??:;" order="12" ID = "00000000-0000-0000-0000-000000000032" />
    <text type ="symbol" value = "while y &lt;= 100:;" order="13" ID = "00000000-0000-0000-0000-000000000033" />
    <text type ="symbol" value = "    create_line( x1, y1, x2, y2 );" order="14" ID = "00000000-0000-0000-0000-000000000034" />
    <text type ="symbol" value = "    create_line( 10, y1, 110, y2 );" order="15" ID = "00000000-0000-0000-0000-000000000035" />
    <text type ="symbol" value = "    create_line( 10, y, 110, y );" order="16" ID = "00000000-0000-0000-0000-000000000036" />
    <text type ="symbol" value = "    y = y + ??;" order="17" ID = "00000000-0000-0000-0000-000000000037" />
    <text type ="symbol" value = "    y = y + 10;" order="18" ID = "00000000-0000-0000-0000-000000000038" />
    <text type ="number" value = ";" order="19" ID = "00000000-0000-0000-0000-000000000039" />
    <text type ="symbol" value = "complete()" order="20" ID = "00000000-0000-0000-0000-00000000003a" />
</document>
<document name = "listProcessingFunctionsDoc" type = "Programming Problem" kind = "Textual" FixOrder = "true" ID = "bbf25061-8d47-4314-a373-4b0a9bc729a3">
    <text type ="Title" value = "The Problem;" order="0" ID = "00000000-0000-0000-0000-0000000000bb" />
    <text type ="Normal" value = ";" order="1" ID = "00000000-0000-0000-0000-0000000000bc" />
    <text type ="Normal" value = "Write two functions.;" order="2" ID = "00000000-0000-0000-0000-0000000000bd" />
    <text type ="Normal" value = "They should both take a list of words and they should both check each word" order="3" ID = "00000000-0000-0000-0000-0000000000be" />
    <text type ="Normal" value = " to see if the first letter is upper or lower case. ;" order="4" ID = "00000000-0000-0000-0000-0000000000bf" />
    <text type ="Normal" value = "For any word that has a lowercase first letter, the first letter should be converted to upper case.;" order="5" ID = "00000000-0000-0000-0000-0000000000c0" />
    <text type ="Normal" value = "The first function should create and return a new list containing all the words, and the ;" order="6" ID = "00000000-0000-0000-0000-0000000000c1" />
    <text type ="Normal" value = "second function should change words in place in the list - it does not need to return anything.;" order="7" ID = "00000000-0000-0000-0000-0000000000c2" />
    <text type ="Normal" value = ";" order="8" ID = "00000000-0000-0000-0000-0000000000c3" />
    <text type ="Title" value = "The Plan;" order="9" ID = "00000000-0000-0000-0000-0000000000c4" />
    <text type ="Normal" value = ";" order="10" ID = "00000000-0000-0000-0000-0000000000c5" />
    <text type ="Normal" value = "This is a rough plan for the body of the functions;" order="11" ID = "00000000-0000-0000-0000-0000000000c6" />
    <text type ="Normal" value = ";" order="12" ID = "00000000-0000-0000-0000-0000000000c7" />
    <text type ="Normal" value = "for each word in the list;" order="13" ID = "00000000-0000-0000-0000-0000000000c8" />
    <text type ="Normal" value = "     if the word does not start with a capital letter;" order="14" ID = "00000000-0000-0000-0000-0000000000c9" />
    <text type ="Normal" value = "          change it so that it does start with a capital;" order="15" ID = "00000000-0000-0000-0000-0000000000ca" />
    <text type ="Normal" value = ";" order="16" ID = "00000000-0000-0000-0000-0000000000cb" />
    <text type ="Normal" value = ";" order="17" ID = "00000000-0000-0000-0000-0000000000cc" />
    <text type ="Title" value = "The Program;" order="18" ID = "00000000-0000-0000-0000-0000000000cd" />
    <text type ="Normal" value = ";" order="19" ID = "00000000-0000-0000-0000-0000000000ce" />
    <text type ="Code" value = "from string import *;" order="20" ID = "00000000-0000-0000-0000-0000000000cf" />
    <text type ="Normal" value = ";" order="21" ID = "00000000-0000-0000-0000-0000000000d0" />
    <text type ="Comment" value = "# function to create and return a list containing all;" order="22" ID = "00000000-0000-0000-0000-0000000000d1" />
    <text type ="Comment" value = "# words in supplied list, ensuring all have capitalised;" order="23" ID = "00000000-0000-0000-0000-0000000000d2" />
    <text type ="Comment" value = "# first letters.;" order="24" ID = "00000000-0000-0000-0000-0000000000d3" />
    <text type ="Code" value = "def capitaliseNew( words ):;" order="25" ID = "00000000-0000-0000-0000-0000000000d4" />
    <text type ="Code" value = "    newWords = [];" order="26" ID = "00000000-0000-0000-0000-0000000000d5" />
    <text type ="Normal" value = ";" order="27" ID = "00000000-0000-0000-0000-0000000000d6" />
    <text type ="Code" value = "    for word in words:;" order="28" ID = "00000000-0000-0000-0000-0000000000d7" />
    <text type ="Code" value = "        if word[ 0 ] in lowercase:;" order="29" ID = "00000000-0000-0000-0000-0000000000d8" />
    <text type ="Code" value = "            newWords += [upper( word[ 0 ] ) + word[ 1: ]];" order="30" ID = "00000000-0000-0000-0000-0000000000d9" />
    <text type ="Code" value = "        else:;" order="31" ID = "00000000-0000-0000-0000-0000000000da" />
    <text type ="Code" value = "            newWords += [word];" order="32" ID = "00000000-0000-0000-0000-0000000000db" />
    <text type ="Normal" value = ";" order="33" ID = "00000000-0000-0000-0000-0000000000dc" />
    <text type ="Code" value = "    return newWords;" order="34" ID = "00000000-0000-0000-0000-0000000000dd" />
    <text type ="Normal" value = ";" order="35" ID = "00000000-0000-0000-0000-0000000000de" />
    <text type ="Comment" value = "# function to capitalise first letter of all words in;" order="36" ID = "00000000-0000-0000-0000-0000000000df" />
    <text type ="Comment" value = "# list supplied as parameter;" order="37" ID = "00000000-0000-0000-0000-0000000000e0" />
    <text type ="Code" value = "def capitaliseInPlace( words ):;" order="38" ID = "00000000-0000-0000-0000-0000000000e1" />
    <text type ="Code" value = "    for wordIndex in range( len( words ) ):;" order="39" ID = "00000000-0000-0000-0000-0000000000e2" />
    <text type ="Code" value = "        word = words[ wordIndex ];" order="40" ID = "00000000-0000-0000-0000-0000000000e3" />
    <text type ="Code" value = "        if word[ 0 ] in lowercase:;" order="41" ID = "00000000-0000-0000-0000-0000000000e4" />
    <text type ="Code" value = "            words[ wordIndex ] = upper( word[ 0 ] ) + word[ 1: ];" order="42" ID = "00000000-0000-0000-0000-0000000000e5" />
    <text type ="Normal" value = ";" order="43" ID = "00000000-0000-0000-0000-0000000000e6" />
    <text type ="Normal" value = ";" order="44" ID = "00000000-0000-0000-0000-0000000000e7" />
    <text type ="Comment" value = "# Testing code;" order="45" ID = "00000000-0000-0000-0000-0000000000e8" />
    <text type ="Code" value = "w = [ &quot;fred&quot;, &quot;Bob&quot;, &quot;harry&quot; ];" order="46" ID = "00000000-0000-0000-0000-0000000000e9" />
    <text type ="Normal" value = ";" order="47" ID = "00000000-0000-0000-0000-0000000000ea" />
    <text type ="Code" value = "print capitaliseNew( w );" order="48" ID = "00000000-0000-0000-0000-0000000000ec" />
    <text type ="Code" value = "print w;" order="49" ID = "00000000-0000-0000-0000-0000000000ed" />
    <text type ="Code" value = "capitaliseInPlace( w );" order="50" ID = "00000000-0000-0000-0000-0000000000ee" />
    <text type ="Code" value = "print w;" order="51" ID = "00000000-0000-0000-0000-0000000000ef" />
    <text type ="Normal" value = ";" order="52" ID = "00000000-0000-0000-0000-0000000000f0" />
</document>
<document name = "pentagonDocument" type = "mathType" kind = "Textual" FixOrder = "true" ID = "00000000-0000-0000-0000-000000000061">
    <text type ="text" value = "# Draw a regular pentagon.;" order="0" ID = "00000000-0000-0000-0000-00000000006c" />
    <text type ="text" value = "# Quintin - 8-11-13;" order="1" ID = "00000000-0000-0000-0000-00000000006d" />
    <text type ="number" value = ";" order="2" ID = "00000000-0000-0000-0000-00000000006e" />
    <text type ="symbol" value = "from Canvas import *;" order="3" ID = "00000000-0000-0000-0000-00000000006f" />
    <text type ="number" value = ";" order="4" ID = "00000000-0000-0000-0000-000000000070" />
    <text type ="symbol" value = "lineCount = 0;" order="5" ID = "00000000-0000-0000-0000-000000000071" />
    <text type ="symbol" value = "startX = 100;" order="6" ID = "00000000-0000-0000-0000-000000000072" />
    <text type ="symbol" value = "startY = 100;" order="7" ID = "00000000-0000-0000-0000-000000000073" />
    <text type ="symbol" value = "angle = 90;" order="8" ID = "00000000-0000-0000-0000-000000000074" />
    <text type ="symbol" value = "sideLength = 50;" order="9" ID = "00000000-0000-0000-0000-000000000075" />
    <text type ="number" value = ";" order="10" ID = "00000000-0000-0000-0000-000000000076" />
    <text type ="symbol" value = "while lineCount &lt; 5:;" order="11" ID = "00000000-0000-0000-0000-000000000077" />
    <text type ="text" value = "    # Generate the characteristics of the new line;" order="12" ID = "00000000-0000-0000-0000-000000000078" />
    <text type ="symbol" value = "    endX, endY = end_point( startX, startY, sideLength, angle );" order="13" ID = "00000000-0000-0000-0000-000000000079" />
    <text type ="number" value = ";" order="14" ID = "00000000-0000-0000-0000-00000000007a" />
    <text type ="text" value = "    # and draw it;" order="15" ID = "00000000-0000-0000-0000-00000000007b" />
    <text type ="symbol" value = "    create_line( startX, startY, endX, endY );" order="16" ID = "00000000-0000-0000-0000-00000000007c" />
    <text type ="number" value = ";" order="17" ID = "00000000-0000-0000-0000-00000000007d" />
    <text type ="text" value = "    # Now get ready for next line;" order="18" ID = "00000000-0000-0000-0000-00000000007e" />
    <text type ="symbol" value = "    startX = endX;" order="19" ID = "00000000-0000-0000-0000-00000000007f" />
    <text type ="symbol" value = "    startY = endY;" order="20" ID = "00000000-0000-0000-0000-000000000080" />
    <text type ="symbol" value = "    angle += 72;" order="21" ID = "00000000-0000-0000-0000-000000000081" />
    <text type ="symbol" value = "    lineCount += 1;" order="22" ID = "00000000-0000-0000-0000-000000000082" />
    <text type ="number" value = ";" order="23" ID = "00000000-0000-0000-0000-000000000083" />
    <text type ="symbol" value = "complete()" order="24" ID = "00000000-0000-0000-0000-000000000084" />
</document>
<document name = "RandomLineDocument" type = "mathType" kind = "Textual" FixOrder = "true" ID = "00000000-0000-0000-0000-00000000003b">
    <text type ="title" value = "Write a program to draw a random segmented line.  More precisely, the line should start at (100, 100) and consist of 10 straight segments, connected so that the end of the first line joins up with the start of the second, and so on, to form one long line.  The length and orientation of each segment should be chosen at random, between the limits 0-50 and 0-359 respectively.;" order="0" ID = "00000000-0000-0000-0000-000000000043" />
    <text type ="text" value = "------------------------------------------------------------;" order="1" ID = "00000000-0000-0000-0000-000000000044" />
    <text type ="text" value = ";" order="2" ID = "00000000-0000-0000-0000-000000000045" />
    <text type ="text" value = "# Draw a random segmented lines.  10 segments, end of one joined to;" order="3" ID = "00000000-0000-0000-0000-000000000046" />
    <text type ="text" value = "# start of the next, each a random length (between 0-50) and orientation.;" order="4" ID = "00000000-0000-0000-0000-000000000047" />
    <text type ="text" value = "# The line should start at (100,100).;" order="5" ID = "00000000-0000-0000-0000-000000000048" />
    <text type ="text" value = "# Quintin - 8-11-13;" order="6" ID = "00000000-0000-0000-0000-000000000049" />
    <text type ="number" value = ";" order="7" ID = "00000000-0000-0000-0000-00000000004a" />
    <text type ="symbol" value = "from Canvas import *;" order="8" ID = "00000000-0000-0000-0000-00000000004b" />
    <text type ="symbol" value = "from random import *;" order="9" ID = "00000000-0000-0000-0000-00000000004c" />
    <text type ="number" value = ";" order="10" ID = "00000000-0000-0000-0000-00000000004d" />
    <text type ="symbol" value = "lineCount = 0;" order="11" ID = "00000000-0000-0000-0000-00000000004e" />
    <text type ="symbol" value = "startX = 100;" order="12" ID = "00000000-0000-0000-0000-00000000004f" />
    <text type ="symbol" value = "startY = 100;" order="13" ID = "00000000-0000-0000-0000-000000000050" />
    <text type ="number" value = ";" order="14" ID = "00000000-0000-0000-0000-000000000051" />
    <text type ="symbol" value = "while lineCount &lt; 10:;" order="15" ID = "00000000-0000-0000-0000-000000000052" />
    <text type ="text" value = "    # Generate the characteristics of the new line;" order="16" ID = "00000000-0000-0000-0000-000000000053" />
    <text type ="symbol" value = "    newLength = randint( 0, 50 );" order="17" ID = "00000000-0000-0000-0000-000000000054" />
    <text type ="symbol" value = "    newAngle = randint( 0, 359 );" order="18" ID = "00000000-0000-0000-0000-000000000055" />
    <text type ="symbol" value = "    endX, endY = end_point( startX, startY, newLength, newAngle );" order="19" ID = "00000000-0000-0000-0000-000000000056" />
    <text type ="number" value = ";" order="20" ID = "00000000-0000-0000-0000-000000000057" />
    <text type ="text" value = "    # and draw it;" order="21" ID = "00000000-0000-0000-0000-000000000058" />
    <text type ="symbol" value = "    create_line( startX, startY, endX, endY );" order="22" ID = "00000000-0000-0000-0000-000000000059" />
    <text type ="number" value = ";" order="23" ID = "00000000-0000-0000-0000-00000000005a" />
    <text type ="text" value = "    # Now get ready for next line;" order="24" ID = "00000000-0000-0000-0000-00000000005b" />
    <text type ="symbol" value = "    startX = endX;" order="25" ID = "00000000-0000-0000-0000-00000000005c" />
    <text type ="symbol" value = "    startY = endY;" order="26" ID = "00000000-0000-0000-0000-00000000005d" />
    <text type ="symbol" value = "    lineCount += 1;" order="27" ID = "00000000-0000-0000-0000-00000000005e" />
    <text type ="number" value = ";" order="28" ID = "00000000-0000-0000-0000-00000000005f" />
    <text type ="symbol" value = "complete();" order="29" ID = "00000000-0000-0000-0000-000000000060" />
</document>
<document name = "regularShapeDocument" type = "mathType" kind = "Textual" FixOrder = "true" ID = "00000000-0000-0000-0000-000000000085">
    <text type ="text" value = "# Function to draw a regular shape, given starting point,;" order="0" ID = "00000000-0000-0000-0000-000000000087" />
    <text type ="text" value = "# number of sides and side length.;" order="1" ID = "00000000-0000-0000-0000-000000000088" />
    <text type ="text" value = "# Quintin - 8-11-13;" order="2" ID = "00000000-0000-0000-0000-000000000089" />
    <text type ="number" value = ";" order="3" ID = "00000000-0000-0000-0000-00000000008a" />
    <text type ="symbol" value = "from Canvas import *;" order="4" ID = "00000000-0000-0000-0000-00000000008b" />
    <text type ="number" value = ";" order="5" ID = "00000000-0000-0000-0000-00000000008c" />
    <text type ="symbol" value = "def shape(" order="6" ID = "00000000-0000-0000-0000-00000000008d" />
    <text type ="symbol" value = "startX, startY," order="7" ID = "00000000-0000-0000-0000-00000000008e" />
    <text type ="symbol" value = "numberOfSides," order="8" ID = "00000000-0000-0000-0000-00000000008f" />
    <text type ="symbol" value = "sideLength" order="9" ID = "00000000-0000-0000-0000-000000000090" />
    <text type ="symbol" value = "): ;" order="10" ID = "00000000-0000-0000-0000-000000000091" />
    <text type ="symbol" value = "    lineCount = 0;" order="11" ID = "00000000-0000-0000-0000-000000000092" />
    <text type ="symbol" value = "    angle = 90;" order="12" ID = "00000000-0000-0000-0000-000000000093" />
    <text type ="symbol" value = "    angleInc = 360.0 / numberOfSides;" order="13" ID = "00000000-0000-0000-0000-000000000094" />
    <text type ="number" value = ";" order="14" ID = "00000000-0000-0000-0000-000000000095" />
    <text type ="symbol" value = "    while lineCount &lt; numberOfSides:;" order="15" ID = "00000000-0000-0000-0000-000000000096" />
    <text type ="text" value = "        # Generate the characteristics of the new line;" order="16" ID = "00000000-0000-0000-0000-000000000097" />
    <text type ="symbol" value = "        endX, endY = end_point( startX, startY, sideLength, angle );" order="17" ID = "00000000-0000-0000-0000-000000000098" />
    <text type ="number" value = ";" order="18" ID = "00000000-0000-0000-0000-000000000099" />
    <text type ="text" value = "        # and draw it;" order="19" ID = "00000000-0000-0000-0000-00000000009a" />
    <text type ="symbol" value = "        create_line( startX, startY, endX, endY );" order="20" ID = "00000000-0000-0000-0000-00000000009b" />
    <text type ="number" value = ";" order="21" ID = "00000000-0000-0000-0000-00000000009c" />
    <text type ="text" value = "        # Now get ready for next line;" order="22" ID = "00000000-0000-0000-0000-00000000009d" />
    <text type ="symbol" value = "        startX = endX;" order="23" ID = "00000000-0000-0000-0000-00000000009e" />
    <text type ="symbol" value = "        startY = endY;" order="24" ID = "00000000-0000-0000-0000-00000000009f" />
    <text type ="symbol" value = "        angle += 360 / numberOfSides;" order="25" ID = "00000000-0000-0000-0000-0000000000a0" />
    <text type ="symbol" value = "        angle += angleInc;" order="26" ID = "00000000-0000-0000-0000-0000000000a1" />
    <text type ="symbol" value = "        lineCount += 1;" order="27" ID = "00000000-0000-0000-0000-0000000000a2" />
    <text type ="number" value = ";" order="28" ID = "00000000-0000-0000-0000-0000000000a3" />
    <text type ="symbol" value = "shape( 30,30,3,30 );" order="29" ID = "00000000-0000-0000-0000-0000000000a4" />
    <text type ="symbol" value = "shape( 100, 180, 23, 20 );" order="30" ID = "00000000-0000-0000-0000-0000000000a5" />
    <text type ="symbol" value = "shape( 20,60,4,55 );" order="31" ID = "00000000-0000-0000-0000-0000000000a6" />
    <text type ="number" value = ";" order="32" ID = "00000000-0000-0000-0000-0000000000a7" />
    <text type ="symbol" value = "complete()" order="33" ID = "00000000-0000-0000-0000-0000000000a8" />
</document>
<document name = "passwordCheckerProblem" type = "Programming Problem" kind = "Textual" FixOrder = "true" ID = "e163f781-4304-43c9-af15-1cebe9c12c47">
    <text type ="Normal" value = "Be sure to read what is in the bottom pane of the window on every step.;" order="0" ID = "df8d741e-0836-4207-b61d-db70af613f4d" />
    <text type ="Normal" value = "Write a function " order="1" ID = "a1af0502-fe09-4477-b1d6-f68a39549090" />
    <text type ="Normal" value = "to check whether a password conforms to a set of rules ? as might be used when you register with a website.  The function should " order="2" ID = "3bbcb38e-51c7-4a24-bb7c-2745869c29a8" />
    <text type ="Normal" value = "take as parameter the password as a string" order="3" ID = "dd97e3d5-bd80-456f-85c4-390807d776c0" />
    <text type ="Normal" value = ", and " order="4" ID = "08ea462d-677b-457d-bdc7-389b55dac287" />
    <text type ="Normal" value = "return True or False depending on whether the password is well-formed or not, respectively" order="5" ID = "4212c9d4-83b0-41cc-b391-84620897ddbb" />
    <text type ="Normal" value = ".  The rules for a valid password are as follows:;" order="6" ID = "b575be7a-9897-4fcf-84cb-f46f85541929" />
    <text type ="Normal" value = ";" order="7" ID = "eb4dd807-96e7-438f-aa22-61ec7b00c86b" />
    <text type ="Normal" value = "    - Must have at least 6 characters;" order="8" ID = "e5d838ae-e262-4d7e-bc64-3ffe6f6b3cf5" />
    <text type ="Normal" value = "    - Must contain at least one digit, one lower case letter and one upper case letter;" order="9" ID = "483fc110-6b31-46f5-97de-7679b124bc2c" />
    <text type ="Normal" value = ";" order="10" ID = "e314aecb-6250-41cf-82de-dfeb6715277d" />
    <text type ="Normal" value = "The following are some sample passwords and the expected output from the checker function:;" order="11" ID = "8b1b8242-1c34-47f1-81d5-4a490adbd909" />
    <text type ="Normal" value = ";" order="12" ID = "64c810fb-de7f-4249-80af-84d2db905cf2" />
    <text type ="Code" value = "    aA4bc           False;" order="13" ID = "4dda133e-365e-42c3-912e-9aaefc986308" />
    <text type ="Code" value = "    a4Abcd          True;" order="14" ID = "2ec0e98e-3205-4268-a03a-627faa1b1a3d" />
    <text type ="Code" value = "    aaa4aaa         False;" order="15" ID = "80536748-f4c9-49d2-bbc1-8ace568778bb" />
    <text type ="Code" value = "    aAaAaA          False;" order="16" ID = "ef4f4a13-dec3-4405-9505-f17a94ee246e" />
</document>
<document name = "passwordCheckerCode" type = "Programming Problem" kind = "Textual" FixOrder = "true" ID = "91dbbcbb-7a79-4eae-9db4-4ea8aab829fc">
    <text type ="Comment" value = "# Function to check if a password is well-formed, that is;" order="0" ID = "fa744140-0cc9-4a16-82d8-4b687ddaad31" />
    <text type ="Comment" value = "# contains at least 6 characters with at least one of each of;" order="1" ID = "c90c1f82-72a3-4057-ae96-47c4fd291c73" />
    <text type ="Comment" value = "# a digit, a lowercase letter and an uppercase letter.;" order="2" ID = "db82dea9-c878-47e5-b021-95844a059365" />
    <text type ="Normal" value = ";" order="3" ID = "d54ce2ac-1147-41e6-806d-00a0a8207fe0" />
    <text type ="Comment" value = "# Quintin;" order="4" ID = "54ad033b-f258-44de-a0bf-a3dc0e0946c9" />
    <text type ="Normal" value = ";" order="5" ID = "4bd30e2f-632e-4f28-b0a8-400a132637a7" />
    <text type ="Code" value = "from string import *;" order="6" ID = "c9c60dc4-6b83-4169-ba05-96e0cb40f019" />
    <text type ="Normal" value = ";" order="7" ID = "10bedb8f-ed4b-4beb-a0d0-575ca0913e7f" />
    <text type ="Code" value = "minLength = 6;" order="8" ID = "7f3a1d9f-743e-4b27-84db-66f7884deb7d" />
    <text type ="Normal" value = ";" order="9" ID = "1273e89b-4d13-46d9-8385-7b29d88639f0" />
    <text type ="Code" value = "def checkPassword( password ):;" order="10" ID = "1f95ea6c-3f8a-44ae-a9c1-a3c605f2ca40" />
    <text type ="Comment" value = "    # Check if the length is ok;" order="11" ID = "034abfa6-cbf0-4608-84c1-82c66a482c81" />
    <text type ="Code" value = "    if len( password ) &gt;= minLength:;" order="12" ID = "0caf0abd-790d-4528-a7f0-70b3698e8789" />
    <text type ="Code" value = "        lengthOK = True;" order="13" ID = "4656298b-0b54-48a4-8427-e4fc5be0747a" />
    <text type ="Code" value = "    else:;" order="14" ID = "757a02ad-ad3c-4d02-9c6e-770ab3eb8eb6" />
    <text type ="Code" value = "        lengthOK = False;" order="15" ID = "34f13d9e-2d18-4132-a9d3-ab9d9e4239d6" />
    <text type ="Code" value = "    lengthOK = len( password) &gt;= minLength   " order="16" ID = "911453ff-d5b5-4794-b5a0-a563cd4caefb" />
    <text type ="Comment" value = "# Test on whether length is ok;" order="17" ID = "9eabf1fe-2980-4285-8f9f-07959c186278" />
    <text type ="Normal" value = "    ;" order="18" ID = "7d90fa78-0e7a-4141-817b-dfbd955c7356" />
    <text type ="Code" value = "    hasLowerLetter = False    " order="19" ID = "5d59fcde-09aa-4f87-beeb-013d0e1f4a13" />
    <text type ="Comment" value = "# Initially, assume no lowercase letters;" order="20" ID = "cdaa73e0-79f6-4177-aaa0-8ef72b131f7f" />
    <text type ="Code" value = "    hasUpperLetter = False    " order="21" ID = "4cf27d4b-a22e-4508-9598-0953a3c22f9e" />
    <text type ="Comment" value = "# ... same for uppercase letters;" order="22" ID = "6f409e4f-0a74-42e3-a7f7-dcf81041e981" />
    <text type ="Code" value = "    hasDigit = False          " order="23" ID = "94f1a8e1-4503-416a-8cc5-3299bfa3fd7b" />
    <text type ="Comment" value = "# ... same for digits;" order="24" ID = "fd0ccb1e-fa4d-4be3-90d8-72d5ede408a4" />
    <text type ="Normal" value = ";" order="25" ID = "b0d684ac-514f-4a0d-981c-e28577fa2c4c" />
    <text type ="Comment" value = "    # Check each character in turn in the password;" order="26" ID = "0c798b06-9aec-45f4-b404-8865bd7ddc58" />
    <text type ="Code" value = "    for char in password:;" order="27" ID = "581553cf-31cc-45d2-b0df-e9051757fd2f" />
    <text type ="Code" value = "        if char in lowercase:;" order="28" ID = "d3e55f5a-8822-4b5b-9e7e-ea7c5f2970c3" />
    <text type ="Code" value = "            hasLowerLetter = True;" order="29" ID = "4b274763-e1e2-4f83-939c-d0fc8d2e8268" />
    <text type ="Code" value = "        if char in uppercase:;" order="30" ID = "f164661c-40b8-43d4-9ad6-7900006a8309" />
    <text type ="Code" value = "        elif char in uppercase:;" order="31" ID = "b4b44464-56c7-4fa9-b366-bd42b0fba05b" />
    <text type ="Code" value = "            hasUpperLetter = True;" order="32" ID = "2c6294f6-b87c-441e-bc14-ebf7ece21e79" />
    <text type ="Code" value = "        if char in digits:;" order="33" ID = "3789bdcd-139d-45fa-bf57-147ebf6f1a5e" />
    <text type ="Code" value = "        elif char in digits:;" order="34" ID = "74f6faac-cf39-430a-9b96-57f4547ba5db" />
    <text type ="Code" value = "            hasDigit = True;" order="35" ID = "f1359f08-4c1c-4768-83b7-8b28cda3de18" />
    <text type ="Normal" value = ";" order="36" ID = "a969e7ab-669c-4104-8087-2d471d66b571" />
    <text type ="Comment" value = "    # Combine our analysis into a single boolean value and return it;" order="37" ID = "f3b2bfab-23c6-445c-ab7f-3ea64bddce87" />
    <text type ="Code" value = "    result = lengthOK and hasLowerLetter and hasUpperLetter and hasDigit;" order="38" ID = "2d68099c-a92e-4728-99ec-bab0d50f4c02" />
    <text type ="Code" value = "    return ???;" order="39" ID = "9d55155c-7a13-4dfd-aee0-809bd79abda2" />
    <text type ="Code" value = "    return result;" order="40" ID = "8fef0dae-fc6b-4ff4-8002-b72fabccbf88" />
    <text type ="Code" value = "    return lengthOK and hasLowerLetter and hasUpperLetter and hasDigit;" order="41" ID = "3c854404-dfdc-462a-8d79-b2fa2da7b10d" />
</document>
<document name = "JustAMinuteProblem" type = "Programming Problem" kind = "Textual" FixOrder = "true" ID = "494466e5-fe65-4eda-b3b0-2a090d109b97">
    <text type ="Normal" value = "The Just A Minute program on BBC Radio 4 asks contestants to speak on a specific topic for one minute.  Among other conditions, they must not use any word more than once.  To help the game show hosts, the BBC has asked you to " order="0" ID = "a4167d3f-e668-4dff-b5f2-7631a8d8ec90" />
    <text type ="Normal" value = "write a complete program " order="1" ID = "a91ba6ec-cdc4-45b7-ab92-2984163d825b" />
    <text type ="Normal" value = "that " order="2" ID = "5646e7d9-74b3-4710-b93b-c2a34ece44cb" />
    <text type ="Normal" value = "reads in a single line of text from the user" order="3" ID = "ba8449d6-081f-4bc6-80f1-61d0c789287d" />
    <text type ="Normal" value = ", representing whatever the contestant said, and " order="4" ID = "dc20dc25-d913-4946-926b-1f1d69023026" />
    <text type ="Normal" value = "writing out any words that appear more than once in the text.;" order="5" ID = "92918989-f06b-459a-8c77-d09d047ec9fe" />
    <text type ="Normal" value = ";" order="6" ID = "45f368bd-936a-47ad-a2bf-0b4a009959c8" />
    <text type ="Normal" value = "For example, if the contestant said, on the topic The Ides of March:;" order="7" ID = "92bc824e-0bff-4a57-b9b7-81bf02365e64" />
    <text type ="Normal" value = ";" order="8" ID = "e70c71d3-aa05-4d77-9e87-8cdac2b421ff" />
    <text type ="Code" value = "The Ides of March are well known historically as the date on which Julius Caesar was assassinated by Brutus and others.  To be precise, the day of the year in question is the 15th of March.  JC should have known better as Shakespeare?s soothsayer apparently warned him of the danger, saying Beware the Ides of March.;" order="9" ID = "db1449fc-475c-4fbb-bf06-ac423816cc61" />
    <text type ="Normal" value = ";" order="10" ID = "1fa6d30d-76e2-481a-9add-baed94dafa00" />
    <text type ="Normal" value = "the programme should write out the following: ;" order="11" ID = "8833628c-5fdf-4fd1-b279-92e930e45ba1" />
    <text type ="Normal" value = ";" order="12" ID = "02602b18-b319-47e1-8222-87d2044e078b" />
    <text type ="Code" value = "known 2;" order="13" ID = "7862fbc6-6a32-4fa3-b6e0-b79c63b52cd4" />
    <text type ="Code" value = "as 2;" order="14" ID = "9cdd113f-3fed-46f0-bafd-ffda5c6a85e1" />
    <text type ="Code" value = "ides 2;" order="15" ID = "0b91ad00-3864-43fc-b871-ee2cea6a7b6f" />
    <text type ="Code" value = "march 3;" order="16" ID = "64777699-1e30-4c7a-88c8-91cd07a4aac0" />
    <text type ="Code" value = "of 5;" order="17" ID = "3db23e68-d9c4-4eee-89a0-34329090d426" />
    <text type ="Code" value = "the 7;" order="18" ID = "e8846dc1-ff20-4562-a5ec-953bb8adef78" />
    <text type ="Normal" value = ";" order="19" ID = "567d7a16-7e39-46be-a299-2855945de883" />
    <text type ="Normal" value = "Note that the order in which the words appear in the output is not important and that upper and lower case are treated the same - see how 'The' and 'the' are treated the same in the example above.;" order="20" ID = "957ba26f-60b0-4f54-bc64-8cc892656b1a" />
</document>
<document name = "JustAMinuteCode" type = "Programming Problem" kind = "Textual" FixOrder = "true" ID = "c66bcd1e-2d28-4527-9988-7536066ebfa7">
    <text type ="Comment" value = "# Checker suitable for a game such as Just a Minute;" order="0" ID = "bc4e37c7-e72e-4054-90de-eb8d7ca7d664" />
    <text type ="Comment" value = "# Checks for repeated words in a sentence;" order="1" ID = "aa421fb2-d55a-438e-a97f-b9c1282b063c" />
    <text type ="Normal" value = ";" order="2" ID = "6699d052-d528-400b-8659-a2d63f3267d8" />
    <text type ="Comment" value = "# Quintin;" order="3" ID = "ebd507fc-d355-4da4-9c5d-d75008e72793" />
    <text type ="Normal" value = ";" order="4" ID = "36248888-6653-4836-8f2b-16a7603738c8" />
    <text type ="Code" value = "from string import *;" order="5" ID = "eeacb02d-45e3-4104-a58d-c90475728255" />
    <text type ="Normal" value = ";" order="6" ID = "967be561-82c5-4e7e-b764-3feebc7a4ed2" />
    <text type ="Code" value = "text = raw_input( &quot;Please enter the text to be checked: &quot; );" order="7" ID = "84129754-ae3c-4563-9ab0-367d1fe6b3f4" />
    <text type ="Normal" value = ";" order="8" ID = "7027d6ca-4ab3-473c-bf17-b7259e98b4c8" />
    <text type ="Comment" value = "# Turn the raw text into a list of words;" order="9" ID = "db1883eb-3acd-4b07-b957-018249d0deca" />
    <text type ="Code" value = "text = lower( text );" order="10" ID = "80a39fb8-9f65-4ad6-a4b1-2af8e722e0ed" />
    <text type ="Code" value = "textNoPunctuation = &quot;&quot;;" order="11" ID = "d48a8cd9-3136-4cee-b8a0-603654009834" />
    <text type ="Code" value = "for char in text:;" order="12" ID = "33f26e8c-6519-4019-98bb-83dc62daa6b5" />
    <text type ="Code" value = "    if char not in punctuation:;" order="13" ID = "91b0eed7-9b46-4850-b46c-239d9408354b" />
    <text type ="Code" value = "        textNoPunctuation = textNoPunctuation + char;" order="14" ID = "ce4e1218-d095-400d-9457-2d95662f50af" />
    <text type ="Normal" value = ";" order="15" ID = "ba2c8f3c-6e7e-4824-975a-c7e75df54c54" />
    <text type ="Code" value = "words = split( textNoPunctuation );" order="16" ID = "009052d4-ce74-451b-8fff-727ff7140784" />
    <text type ="Normal" value = ";" order="17" ID = "6de81795-5d38-4346-a0d1-1f5a563e9baa" />
    <text type ="Comment" value = "# Scan over the word list, keeping a count of each word seen;" order="18" ID = "50413c99-8ead-4c5a-b527-00883e483044" />
    <text type ="Code" value = "wordCounts = {}" order="19" ID = "aba86bd6-dcfa-4dcc-befe-5ca643d87913" />
    <text type ="Comment" value = "          # Use a dictionary to keep the word counts;" order="20" ID = "85c5eb5f-1a23-4b0c-b251-5fe20d232516" />
    <text type ="Normal" value = ";" order="21" ID = "a126dd90-d9d8-49ae-802a-eabfcfe79294" />
    <text type ="Code" value = "for word in words:;" order="22" ID = "52989258-b1b3-493d-a614-e4a605ed7288" />
    <text type ="Code" value = "    if word in wordCounts:;" order="23" ID = "1158f88e-3568-4106-90cd-7ea80d8485dc" />
    <text type ="Code" value = "        wordCounts[ word ] = wordCounts[ word ] + 1;" order="24" ID = "82d5bebf-a6ab-485a-8497-baf412fb083c" />
    <text type ="Code" value = "    else:;" order="25" ID = "d5b3629d-a7fe-45e2-bb76-e0dd6e713bc7" />
    <text type ="Code" value = "        wordCounts[ word ] = 1" order="26" ID = "bc41cc6b-7836-4df6-8228-aef928850e7b" />
    <text type ="Comment" value = "    # Create a new entry for this word, not seen before;" order="27" ID = "0cd4ab6e-9ae6-4042-82d1-ff4f850472b4" />
    <text type ="Normal" value = ";" order="28" ID = "49ee0209-7e1f-440f-8a31-842883a6a341" />
    <text type ="Comment" value = "# Now print out the results;" order="29" ID = "1538e203-dfe1-46fc-a660-fa478cdcf37c" />
    <text type ="Code" value = "for word in wordCounts:;" order="30" ID = "6eb19e36-a30f-4acb-8f3b-5e67f79f5290" />
    <text type ="Code" value = "    print word, wordCounts[ word ];" order="31" ID = "d34dd60f-b655-41ce-9f1e-e0e060f74646" />
    <text type ="Code" value = "    count = wordCounts[ word ];" order="32" ID = "353a564c-c0ba-4e58-9338-f694b684ce3b" />
    <text type ="Code" value = "    if count &gt; 1:" order="33" ID = "191aa7ce-ae2e-4afb-bf0e-f4885d745670" />
    <text type ="Comment" value = "                # Only write out words seen more than once;" order="34" ID = "fdc29718-d8f4-4687-be55-cdf39da3864d" />
    <text type ="Code" value = "        print word, count;" order="35" ID = "547a3d8f-7017-4c29-8dfd-cb611b6646c7" />
</document>
<document name = "FindErrorsProblem" type = "Programming Problem" kind = "Textual" FixOrder = "true" ID = "7675219b-c3e5-4f40-a5a7-c58721ea4940">
    <text type ="Title" value = "The Problem;" order="0" ID = "b009d1f3-1174-4f48-bfec-036983029651" />
    <text type ="Normal" value = ";" order="1" ID = "f54fa9c5-49f8-4ed0-b082-0677ccd43134" />
    <text type ="Normal" value = "In the Lab Exam before Christmas, you had to write code to remove stop words from sentences.  The following function, remove_stop_words, is designed to take as parameter a list of words and then return a copy of the list with any occurrences of the stop words given in stop_word_list removed.  ;" order="2" ID = "82c97c73-9c0f-483a-8f8b-2819659f6d60" />
    <text type ="Normal" value = ";" order="3" ID = "29152e7c-6f34-4bbd-99b3-69eadd73f9c5" />
    <text type ="Normal" value = "The function contains four errors.  Identify each error precisely, explaining both the problem and how you would fix it.  Use the comment numbers to refer to particular lines.;" order="4" ID = "4ecc8a31-9884-4e9f-9c87-a754c55b1a09" />
    <text type ="Normal" value = ";" order="5" ID = "21c1fd36-6115-4467-b202-d1a2f5975e13" />
    <text type ="Comment" value = "# Example stop word list only, obviously too short;" order="6" ID = "8e0c841d-f030-4f74-9ad4-5f6f35600d11" />
    <text type ="Code" value = "stop_word_list " order="7" ID = "05ffb0a2-109e-463c-9700-907bcdcaddcb" />
    <text type ="Code" value = "= [ &quot;this&quot;, &quot;that&quot;, &quot;a&quot;, &quot;the&quot; ]    #1;" order="8" ID = "407d9887-7321-4d12-a0ff-7127fe242db6" />
    <text type ="Normal" value = ";" order="9" ID = "2c7ffd6e-4d15-4e49-afcb-635e235c172c" />
    <text type ="Code" value = "def remove_stop_words( " order="10" ID = "815450f5-4c11-42c5-8a90-e274d98ea3cb" />
    <text type ="Code" value = "old_words" order="11" ID = "cee2c68f-02d9-41a1-8e56-8e2b6bf85e3d" />
    <text type ="Code" value = " ):                #2;" order="12" ID = "c95ddcb0-55cc-46d3-9006-4f31da9f9020" />
    <text type ="Code" value = "    for " order="13" ID = "a5254f2e-edb7-4351-b168-6c14343e9b5e" />
    <text type ="Code" value = "i" order="14" ID = "c948d703-f028-40a7-b107-8b78fd7f2dd1" />
    <text type ="Code" value = " in " order="15" ID = "d4623a4b-be82-47f2-a106-ce8498d2b8f6" />
    <text type ="Code" value = "old_words" order="16" ID = "284e9c8e-0ecd-4a90-868f-8498c756f919" />
    <text type ="Code" value = ":                            #3;" order="17" ID = "4b0bc7cc-6e8e-4ad2-a362-d7fac202c9fb" />
    <text type ="Code" value = "        if " order="18" ID = "4fb5fa51-bd75-4b77-ae71-81c1fbb84ed0" />
    <text type ="Code" value = "i" order="19" ID = "81baff36-9a12-44f1-8d8a-0925a0d7cff2" />
    <text type ="Code" value = " in " order="20" ID = "0e1b4c1a-ac77-41c6-ba13-d9175fcc8c72" />
    <text type ="Code" value = "stop_word_list" order="21" ID = "3462831a-ce02-4d14-a408-6c5eab8e5d06" />
    <text type ="Code" value = ":                    #4;" order="22" ID = "95dd9aa1-de65-4ad8-b7a8-ffcddeeba6b6" />
    <text type ="Code" value = "            words" order="23" ID = "47e3f720-176f-473c-8a3c-d2ee7f7bdb03" />
    <text type ="Code" value = " = " order="24" ID = "85cfaebb-d86a-469d-9059-21946e1526af" />
    <text type ="Code" value = "words" order="25" ID = "c9096dfd-9ad5-4e70-98a8-f1f82ee4bc99" />
    <text type ="Code" value = " + " order="26" ID = "2b6d8930-eb11-45b1-9537-f6a37d939f56" />
    <text type ="Code" value = "i" order="27" ID = "bf28b6a9-c4bd-428a-8c75-ac4bd418bce5" />
    <text type ="Code" value = "                      #5;" order="28" ID = "23676344-6355-4f12-a14e-ebb02f4b2105" />
    <text type ="Normal" value = ";" order="29" ID = "a2aaf471-c676-4a7a-97a5-fe4598e25285" />
    <text type ="Code" value = "        return " order="30" ID = "de5378ab-4d5f-4c8a-9d0e-209ceedab3be" />
    <text type ="Code" value = "words" order="31" ID = "2194069b-1a6f-4e0d-adc8-2657e0edf58e" />
    <text type ="Code" value = "                               #6;" order="32" ID = "5033f9c7-040b-45e8-8971-c6e41685e788" />
</document>
<document name = "FindErrorsStrategies" type = "Programming Problem" kind = "Textual" FixOrder = "true" ID = "7d4ddd29-50ae-4ff0-bf4b-b17c2e2bf798">
    <text type ="Title" value = "Strategies;" order="0" ID = "252cbcbf-08f4-4cd6-9c34-eb83e19d93c2" />
    <text type ="Normal" value = ";" order="1" ID = "b14badaa-1082-47de-b8ba-f889923edd62" />
    <text type ="Normal" value = "1.  Do your best to understand how the code is meant to be working.  This is usually explained to a greater or lesser extent in the problem itself.  As you do this, you may well encounter problems.  If not, then look at the rest of the points.;" order="2" ID = "524a54fb-3fd1-4ff4-81a0-574a6c01b97f" />
    <text type ="Normal" value = ";" order="3" ID = "d6c93ec4-8ea6-41f9-af9d-0877e1aef60e" />
    <text type ="Normal" value = "2.  Are all the variables initialised properly?  That is, is any variable used BEFORE it has first been given a value?;" order="4" ID = "c9fe05c8-d9b8-47f0-b4ab-595b61fb367c" />
    <text type ="Normal" value = ";" order="5" ID = "d860b599-a3f0-4b1a-9946-91cf9c3432bc" />
    <text type ="Normal" value = "3.  In loops, check that the loop will &quot;go round&quot; the right number of times.  Take care to check on the initialisation, test for completion of the loop, and update, of any stepper/counter variable;" order="6" ID = "65f6ec75-2224-4cf2-955a-fddb927a1a5e" />
    <text type ="Normal" value = ";" order="7" ID = "597b7931-8f5a-47d7-b75c-538ab5073208" />
    <text type ="Normal" value = "4.  Check tests in if statements and while loops.  Are you sure the test is the correct one?  Compound Boolean expressions, where you are using more than one ?and? or ?or? operator, can often be used incorrectly.;" order="8" ID = "aad5e936-76ad-45f1-9734-fdab176d156d" />
    <text type ="Normal" value = ";" order="9" ID = "ba6453ea-edca-4626-9702-156f966c94b3" />
    <text type ="Normal" value = "5.  In Python, indentation is important.  Is every statement at the correct indentation level?  It is easy to miss this, so look carefully.;" order="10" ID = "cd376025-8d81-47d3-9535-93c9b7afbe41" />
    <text type ="Normal" value = ";" order="11" ID = "dd55cb3b-d20c-4988-bbdc-cf275b1bda2e" />
    <text type ="Normal" value = "6.  Are the computations required by the problem being performed correctly?  This isn't just arithmetic operations - are all the boolean and string and list and dictionary operations correct?;" order="12" ID = "c8f58e36-a198-4d6e-8b8a-275f386d8877" />
</document>
<document name = "FindErrorsAnswers" type = "Programming Problem" kind = "Textual" FixOrder = "true" ID = "9811008c-0838-41a5-9827-4e3893d1ebcf">
    <text type ="Title" value = "The Errors;" order="0" ID = "b24c5147-f718-4e94-b756-7bfcdc50d22f" />
    <text type ="Normal" value = ";" order="1" ID = "3e757fa6-a75e-40b1-abee-6efc1fd43f3d" />
    <text type ="Normal" value = "1.  The variable words is not initialised.  It is a gatherer variable, and should be initialised to the empty list.  To fix it, between line 2 and 3, at one indentation level in, add ;" order="2" ID = "b91c1334-a102-4562-82b7-5633de9ab760" />
    <text type ="Normal" value = ";" order="3" ID = "458d5ef2-d634-4e2c-a0cc-8e7055a07d3d" />
    <text type ="Code" value = "    words = [];" order="4" ID = "e1855524-6213-4c39-ad7c-ac2413e9e282" />
    <text type ="Normal" value = ";" order="5" ID = "bc18176c-cd07-4691-8215-a333149fe5de" />
    <text type ="Normal" value = "2.  The test in the if statement in Line 4 is wrong.  We should be testing for whether the current word we?re looking at is NOT in the stopword list ? only then do we add it to our new list.  Change the line to:;" order="6" ID = "cb66ffea-f216-4899-ae82-05e397e51b52" />
    <text type ="Normal" value = ";" order="7" ID = "ddc47a91-58b3-4246-b733-eb18f71c7167" />
    <text type ="Code" value = "    if i not in stop_word_list:;" order="8" ID = "9a05271d-e74e-4740-88ff-20b572581a25" />
    <text type ="Normal" value = ";" order="9" ID = "e7800769-fb10-46b7-b9c3-49c107b6accd" />
    <text type ="Normal" value = "3.  The return statement is not indented correctly.  Just now the function will return the first time around the loop.  It should be moved out to the same indentation as the for loop header - that is, it should only be executed once the for loop is finished.;" order="10" ID = "dfe03ce9-a931-4d5f-a219-a753295b1aa0" />
    <text type ="Normal" value = ";" order="11" ID = "afcfa1d6-5b74-4fac-a8cf-8b3e1f867a6f" />
    <text type ="Normal" value = "4.  The update to the words variable on line 5 is incorrect.  A word is being added to a list, but only lists can be added to lists.  The line should read:;" order="12" ID = "033c8bfc-6efb-403a-b9bb-0afdd81eaf2f" />
    <text type ="Normal" value = ";" order="13" ID = "49b5f917-dd3d-4ddd-b705-dffce314958f" />
    <text type ="Code" value = "    words = words + [i];" order="14" ID = "4d7e52db-0605-4c56-b3be-f4b221da4ca6" />
</document>
</documents>
